#version 450 core

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

layout (std430, binding = 0) buffer position_buffer {
	vec3 positions[];
};
layout (std430, binding = 1) buffer color_buffer {
	vec3 colors[];
};
layout (std430, binding = 2) buffer velocity_buffer {
	vec3 velocities[];
};

uniform float dt;
uniform vec2 cursor;

float mid(float low, float val, float high)
{
    return max(low, min(val, high));
}

void main()
{
	uint id = gl_GlobalInvocationID.x;

	vec3 velocity = velocities[id];
	vec3 position = positions[id];

    vec3 cursor3 = vec3(2.0 * cursor.x - 1.0, 2.0 * cursor.y - 1.0, 0.0);
    vec3 acceleration = normalize(cursor3 - position) / distance(cursor3, position);

    vec3 new_position = position + velocity * dt;
    vec3 new_velocity = velocity + acceleration * dt;
    new_velocity = min(2.0f, length(new_velocity)) * normalize(new_velocity);

    new_position.x = mid(-1.0f, new_position.x, 1.0f);
    new_position.y = mid(-1.0f, new_position.y, 1.0f);

	positions[id] = new_position;
    velocities[id] = new_velocity;
}
